#include<iostream.h>
#include<windows.h>
#include<conio.h>
#include<stdio.h>
#include<ctime>
//=================================================================================================================================================================
const int size=9;
const int blank=0;
int A[size][size]={0};
int B[size];
int C[size][size]={0};
//=================================================================================================================================================================
void mainscreen();
void introduce();
void howtoplay();
void gameplay();
void newgame();
//=================================================================================================================================================================

BOOL NT_SetConsoleDisplayMode(HANDLE hOutputHandle, DWORD dwNewMode)//Full screen
{
    typedef BOOL (WINAPI *SCDMProc_t) (HANDLE, DWORD, LPDWORD);
    SCDMProc_t SetConsoleDisplayMode;
    HMODULE hKernel32;
    BOOL bFreeLib = FALSE, ret;
    const char KERNEL32_NAME[] = "kernel32.dll";
    hKernel32 = GetModuleHandleA(KERNEL32_NAME);
    if (hKernel32==NULL)
    {
        hKernel32=LoadLibraryA(KERNEL32_NAME);
        if (hKernel32==NULL)
            return FALSE;
 
        bFreeLib=true;
    }
 
    SetConsoleDisplayMode = (SCDMProc_t)GetProcAddress(hKernel32, "SetConsoleDisplayMode");
    if (SetConsoleDisplayMode == NULL)
    {
        SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
        ret = FALSE;
    }
    else
    {
        DWORD tmp;
        ret = SetConsoleDisplayMode(hOutputHandle, dwNewMode, &tmp);
    }
    if (bFreeLib)
        FreeLibrary(hKernel32);
 
    return ret;
}
//=================================================================================================================================================================
void SetFullScreen()
{
    NT_SetConsoleDisplayMode( GetStdHandle( STD_OUTPUT_HANDLE ), 1 );
}
//=================================================================================================================================================================
void SetColor(WORD color)
{
    HANDLE hConsoleOutput;
    hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);
 
    CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
    GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);
 
    WORD wAttributes = screen_buffer_info.wAttributes;
    color &= 0x000f;
    wAttributes &= 0xfff0;
    wAttributes |= color;
 
    SetConsoleTextAttribute(hConsoleOutput, wAttributes);
}
//=================================================================================================================================================================
void gotoxy(int x,int y)
{
    HANDLE hConsoleOutput;
    COORD Cursor_an_Pos = { x,y};
    hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleCursorPosition(hConsoleOutput , Cursor_an_Pos);
}
//=================================================================================================================================================================
void SetScreenColor(WORD color)
{
    HANDLE hConsoleOutput;
    hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);
 
    CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
    GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);
 
    WORD wAttributes = screen_buffer_info.wAttributes;
    color &= 0x000f;
    color <<= 4;
    wAttributes &= 0xff0f;
    wAttributes |= color;
 
    SetConsoleTextAttribute(hConsoleOutput, wAttributes);
}
//=================================================================================================================================================================
void ShowCur(bool CursorVisibility)
{
    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
    CONSOLE_CURSOR_INFO cursor = {1, CursorVisibility};
    SetConsoleCursorInfo(handle, &cursor);
}
//=================================================================================================================================================================
void draw(int m,int n)
{
	int i;
	printf("%c",218);
	for(i=0;i<n;i++)
		printf("%c%c%c%c",196,196,196,194);
	printf("%c%c%c",196,196,196);
	printf("%c",191);
	cout<<endl;
	for(i=0;i<m;i++){
		for(int j=0;j<n+2;j++)
			printf("%c   ",179);
		printf("\n%c",195);
		for(j=0;j<n;j++)
			printf("%c%c%c%c",196,196,196,197);
		printf("%c%c%c",196,196,196);
		printf("%c\n",180);
	}
	for(int j=0;j<n+2;j++)
		printf("%c   ",179);
	printf("\n%c",192);
	for(i=0;i<n;i++)
		printf("%c%c%c%c",196,196,196,193);
	printf("%c%c%c",196,196,196);
	printf("%c",217);
}
//=================================================================================================================================================================
void mainscreen()
{
	SetFullScreen();
	SetScreenColor(8);
	system("cls");
	ShowCur(false);
	gotoxy(35,5);
	SetColor(10);
	printf("Soduku Game Board");
	SetColor(11);
	gotoxy(35,7);
	printf("1.Introduce");
	SetColor(13);
	gotoxy(35,9);
	printf("2.Game Play");
	SetColor(14);
	gotoxy(35,11);
	printf("3.Tutorial");
	SetColor(12);
	gotoxy(35,13);
	printf("4.Quit");
	int x=30,y=7;
	gotoxy(x,y);
	printf("%c",16);
	char nhap;
	int dem=1;
	while(true){
		nhap=getch();
		if(nhap==80){
			gotoxy(x,y);
			printf("%c",0);
			y+=2;
			if(y>13)
				y=7;
			gotoxy(x,y);
			dem++;
			if(dem>4)
				dem=1;
		printf("%c",16);
		}
		else if(nhap==72){
			gotoxy(x,y);
			printf("%c",0);
			y-=2;
			if(y<7)
				y=13;
			gotoxy(x,y);
			dem--;
			if(dem<1)
				dem=4;
		printf("%c",16);
		}
		if(nhap==13){
			if(dem==1){
				system("cls");
				introduce();
			}
			else if(dem==2){
				system("cls");
				newgame();
			}
			else if(dem==3){
				system("cls");
				howtoplay();
			}
			else{
				system("cls");
				exit(0);
			}
		}
		if(nhap==27)
			exit(0);
	}
}
//=================================================================================================================================================================
void introduce()
{
	gotoxy(10,5);
	SetColor(10);
	printf(" This program was built and developed by DEV - C Archius Vuong\n");
	gotoxy(35,7);
	printf("17110313");
	gotoxy(36,9);
	SetColor(14);
	printf("Game");
	SetColor(11);
	gotoxy(31,11);
	printf("1. Main Screen");
	SetColor(12);
	gotoxy(31,13);
	printf("   2. Quit");
	char nhap;
	int dem=1;
	int x=29,y=11;
	gotoxy(x,y);
	printf("%c",16);
	while(true){
		nhap=getch();
		if(nhap==80){
			gotoxy(x,y);
			printf("%c",0);
			y+=2;
			if(y>13)
				y=11;
			gotoxy(x,y);
			dem++;
			if(dem>2)
				dem=1;
		printf("%c",16);
		}
		else if(nhap==72){
			gotoxy(x,y);
			printf("%c",0);
			y-=2;
			if(y<11)
				y=13;
			gotoxy(x,y);
			dem--;
			if(dem<1)
				dem=2;
		printf("%c",16);
		}
		if(nhap==13){
			if(dem==1){
				system("cls");
				mainscreen();
			}
			else
				exit(0);
		}
	}
}
//=================================================================================================================================================================
int checkblank(int C[][size])
{
	for(int i=0;i<size;i++)
		for(int j=0;j<size;j++)
			if(C[i][j]==blank)	return 1;
	return 0;
}
//=================================================================================================================================================================
int checkwin(int A[][size],int C[][size])
{
	for(int i=0;i<size;i++)
		for(int j=0;j<size;j++)
			if(A[i][j]!=C[i][j])	return 0;
	return 1;
}
//=================================================================================================================================================================
int check(int A[][size],int row,int col,int k)
{
	for(int i=0;i<size;i++)
		if(A[row][i]==k) 
			return 0;
	for(i=0;i<size;i++)
			if(A[i][col] == k)
				return 0;
	int a=row/3,b=col/3;
	for(i=3*a;i<3*a+3;i++)
		for(int j=3*b;j<3*b+3;j++)
			if(A[i][j]==k) 
				return 0;
	return 1;

}
//=================================================================================================================================================================
int test(int x,int B[])
{
	for(int i=0;i<9;i++)
		if(x==B[i])	return 0;
	return 1;
}
//=================================================================================================================================================================
void freespace(int &a,int &b)
{
	do{
		a=rand()%size;
		b=rand()%size;
	}while(C[a][b]!=blank);
}
//=================================================================================================================================================================
void mainloop(int dem)
{
	int i,j;
	int temp=0;
	system("cls");
	SetColor(0);
	SetFullScreen();
	SetScreenColor(7);
	ShowCur(false);
	draw(size-1,size-1);
	while(dem>0){
		i=rand()%9;
		j=rand()%9;
		if(C[i][j]==0){
			C[i][j]=A[i][j];
			int x=2+(j*4);
			int y=1+(i*2);
			gotoxy(x,y);
			printf("%d",A[i][j]);
			dem--;
		}
	}
	int a,b;
	freespace(a,b);
	int x,y;
	x=2+(b*4);
	y=1+(a*2);
	gotoxy(x,y);
	char nhap;
	SetColor(12);
	printf("|");
	while(true){
		nhap=getch();
		if((nhap=='w'||nhap=='W') && (C[a-1][b]==blank)){
			if(a>0)
				a--;
			else if(a==0 && b>=size-1 && C[size-1][0]==blank){
				a=size-1;
				b=0;
			}
			else if(a==0 && C[size-1][b++]==blank){
				a=size-1;
				b++;
			}
			else	freespace(a,b);
		}
		else if((nhap=='z' || nhap=='Z') && (C[a+1][b-1]==blank)){
			if(b>0 && a<size-1){
				b-=1;
				a+=1;
			}
		}
		else if((nhap=='e' || nhap=='E') && (C[a-1][b+1]==blank)){
			if(a>0 && b<size-1){
				a-=1;
				b+=1;
			}
		}
		else if((nhap=='q' || nhap=='Q') && (C[a-1][b-1]==blank)){
			if(a>0 && b>0){
				a-=1;
				b-=1;
			}
		}
		else if((nhap=='c' || nhap=='C') && (C[a+1][b+1]==blank)){
			if(a<size-1 && b<size-1){
				a+=1;
				b+=1;
			}
		}
		else if((nhap=='s'||nhap=='S') && (C[a+1][b]==blank)){
			if(a<size-1 && C[a+1][b]==blank)
				a+=1;
			else if(a==size-1 && b==size-1 && C[0][0]==blank){
				a=0;
				b=0;
			}
			else if(a==size-1 && C[0][b+1]==blank){
				a=0;
				b++;
			}
			else	freespace(a,b);
		}
		else if((nhap=='d'||nhap=='D') && (C[a][b+1]==blank)){
			if(b<size-1 && C[a][b+1]==blank)
				b+=1;
			else if(a==size-1 && b==size-1 && C[0][0]==blank){
				a=0;
				b=0;
			}
			else if(b==size-1 && C[a+1][0]==blank){
				a++;
				b=0;
			}
			else	freespace(a,b);
		}
		else if((nhap=='a'||nhap=='A') && (C[a][b-1]==blank)){
			if(b>0 && C[a][b-1]==blank)
				b-=1;
			else if(a==0 && b==0 && C[size-1][size-1]==blank){
				a=size-1;
				b=size-1;
			}
			else if(b==0 && C[a-1][size-1]==blank){
				a-=1;
				b=size-1;
			}
			else	freespace(a,b);
		}
		else if(nhap=='f' || nhap=='F'){
			for(int i=0;i<size;i++)
				for(int j=0;j<size;j++)
					if(C[i][j]==blank && C[i-1][j-1]!=blank && C[i-1][j]!=blank && C[i-1][j+1]!=blank && C[i][j-1]!=blank && C[i][j+1]!=blank && C[i+1][j-1]!=blank && C[i+1][j]!=blank && 

A[i+1][j+1]!=blank){
						a=i;
						b=j;
					}
		}
		else if(nhap=='r' || nhap=='R')	freespace(a,b);
		gotoxy(x,y);
		printf(" ");
		x=2+(b*4);
		y=1+(a*2);
		gotoxy(x,y);
		printf("|");
		SetColor(12);
		if(nhap=='1'){
			gotoxy(x,y);
			printf("1");
			temp=1;
		}
		if(nhap=='2'){
			gotoxy(x,y);
			printf("2");
			temp=2;
		}
		else if(nhap=='3'){
			gotoxy(x,y);
			printf("3");
			temp=3;
		}
		else if(nhap=='4'){
			gotoxy(x,y);
			printf("4");
			temp=4;
		}
		else if(nhap=='5'){
			gotoxy(x,y);
			printf("5");
			temp=5;
		}
		else if(nhap=='6'){
			gotoxy(x,y);
			printf("6");
			temp=6;
		}
		else if(nhap=='7'){
			gotoxy(x,y);
			printf("7");
			temp=7;
		}
		else if(nhap=='8'){
			gotoxy(x,y);
			printf("8");
			temp=8;
		}
		else if(nhap=='9'){
			gotoxy(x,y);
			printf("9");
			temp=9;
		}
		if(nhap==13){
			if(nhap=='1'){
			gotoxy(x,y);
			printf("1");
			temp=1;
			}
			if(nhap=='2'){
				gotoxy(x,y);
				printf("2");
				temp=2;
			}
			else if(nhap=='3'){
				gotoxy(x,y);
				printf("3");
				temp=3;
			}
			else if(nhap=='4'){
				gotoxy(x,y);
				printf("4");
				temp=4;
			}
			else if(nhap=='5'){
				gotoxy(x,y);
				printf("5");
				temp=5;
			}
			else if(nhap=='6'){
				gotoxy(x,y);
				printf("6");
				temp=6;
			}
			else if(nhap=='7'){
				gotoxy(x,y);
				printf("7");
				temp=7;
			}
			else if(nhap=='8'){
				gotoxy(x,y);
				printf("8");
				temp=8;
			}
			else if(nhap=='9'){
				gotoxy(x,y);
				printf("9");
				temp=9;
			}
			C[a][b]=temp;
			gotoxy(x,y);
			printf("%d",temp);
			if(a==size-1 && b==size-1 && C[0][0]==blank){
				a=0;
				b=0;
			}
			else if(a==size-1 && b==size-1)	freespace(a,b);
			else if(b==size-1 && C[a+1][0]==blank){
				b=0;
				a+=1;
			}
			else if(C[a][b+1]==blank && b<size-2)	b++;
			else if(C[a][b-1]==blank && b>0)	b--;
			else if(C[a-1][b]==blank && a>0)	a--;
			else if(C[a+1][b]==blank && a<size-2)	a++;
			else if(C[a+1][b+1]==blank && a<size-1 && b<size-1){
				a++;
				b++;
			}
			else if(C[a+1][b-1]==blank && a+1<size-2 && b-1>=0){
				a++;
				b--;
			}
			else if(C[a-1][b+1]==blank && a-1>=0 && b+1<size-2){
				a--;
				b++;
			}
			else if(C[a-1][b-1]==blank && a-1>=0 && b-1>=0){
				a--;
				b--;
			}
			else	freespace(a,b);
			x=2+(b*4);
			y=1+(a*2);
			SetColor(0);
			gotoxy(x,y);
			printf("|");
			gotoxy(0,20);
			if(checkblank(C)==0){
				gotoxy(x,y);
				printf("%d",temp);
				gotoxy(12,19);
				SetColor(12);
				if(checkwin(A,C)==1){
					SetColor(10);
					printf("You Win !!!");
				}
				else
					printf("You Lose !!!");
				gotoxy(12,20);
				SetColor(12);
				SetColor(0);
				printf("Result Board");
				gotoxy(0,21);
				draw(size-1,size-1);
				for(int i=0;i<size;i++){
					for(int j=0;j<size;j++){
						int x=2+(j*4);
						int y=22+(i*2);
						gotoxy(x,y);
						printf("%d",A[i][j]);
					}
				}
			}	
		}
	}
}
//=================================================================================================================================================================
void solve(int A[][size],int row,int col,int dem){
	if(col==size){
		if(row==size-1)
			mainloop(dem);
		else
			solve(A,row+1,0,dem);
	}
	else if(A[row][col] == blank){
		int k;
		for (k=1;k<=size; k++)
			if(check(A,row,col,k)){
				A[row][col]=k;
				solve(A,row,col+1,dem);
				A[row][col]=blank;
			}
	} 
	else //bo qua cac o de bai
		solve(A,row,col+1,dem);
}
//=================================================================================================================================================================
void gameplay()
{
	system("cls");
	SetFullScreen();
	SetColor(0);
	ShowCur(false);
	draw(size-1,size-1);
	int dem=0;
	srand(time(NULL));
	int k=rand()%9;
	for(int i=0;i<9;i++){
		int t;
		do{
			t=rand()%9+1;
		}while(test(t,B)==0);
		A[k][i]=t;
		B[dem]=t;
		dem++;
	}
	solve(A,0,0,dem);
}
//=================================================================================================================================================================
void newgame()
{
	SetFullScreen();
	SetScreenColor(8);
	system("cls");
	ShowCur(false);
	gotoxy(25,5);
	SetColor(10);
	printf("Please Select Game Play Mode");
	SetColor(11);
	gotoxy(35,7);
	printf("1.Easy");
	SetColor(13);
	gotoxy(35,9);
	printf("2.Normal");
	SetColor(14);
	gotoxy(35,11);
	printf("3.Hard");
	SetColor(12);
	gotoxy(35,13);
	printf("4.Challenge");
	int x=30,y=7;
	gotoxy(x,y);
	printf("%c",16);
	char nhap;
	int dem=1;
	while(true){
		nhap=getch();
		if(nhap==80){
			gotoxy(x,y);
			printf("%c",0);
			y+=2;
			if(y>13)
				y=7;
			gotoxy(x,y);
			dem++;
			if(dem>4)
				dem=1;
		printf("%c",16);
		}
		else if(nhap==72){
			gotoxy(x,y);
			printf("%c",0);
			y-=2;
			if(y<7)
				y=13;
			gotoxy(x,y);
			dem--;
			if(dem<1)
				dem=4;
		printf("%c",16);
		}
		if(nhap==13){
			if(dem==1)	solve(A,0,0,50);
			else if(dem==2)	solve(A,0,0,40);
			else if(dem==3)	solve(A,0,0,30);
			else	solve(A,0,0,21);
			gameplay();
		}
		else if(nhap==27)
			exit(0);
	}
}
//=================================================================================================================================================================
void howtoplay()
{
	gotoxy(23,5);
	SetColor(10);
	printf(" Use 4 arrows keys to select the position");
	gotoxy(25,7);
	printf(" Use N button to start a new game");
	gotoxy(27,9);
	printf(" Use ESC button to quit game");
	gotoxy(35,11);
	printf(" Have fun !!!");
	gotoxy(35,13);
	SetColor(14);
	printf("1. Main Screen");
	SetColor(12);
	gotoxy(35,15);
	printf("   2. Quit");
	char nhap;
	int dem=1;
	int x=33,y=13;
	gotoxy(x,y);
	printf("%c",16);
	while(true){
		nhap=getch();
		if(nhap==80){
			gotoxy(x,y);
			printf("%c",0);
			y+=2;
			if(y>15)	y=13;
			gotoxy(x,y);
			dem++;
			if(dem>2)	dem=1;
		printf("%c",16);
		}
		else if(nhap==72){
			gotoxy(x,y);
			printf("%c",0);
			y-=2;
			if(y<13)	y=15;
			gotoxy(x,y);
			dem--;
			if(dem<1)		dem=2;
		printf("%c",16);
		}
		if(nhap==13){
			if(dem==1){
				system("cls");
				mainscreen();
			}
			else	exit(0);
		}
	}
}
//=================================================================================================================================================================
void main()
{
	srand(time(NULL));
	mainscreen();
}